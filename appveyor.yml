environment:

  matrix:
    - PYTHON: "C:\\Miniconda37-x64"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"
      CONDA_PY: "37"

    # There is not Miniconda38 on appveyor yet so use Miniconda37.
    - PYTHON: "C:\\Miniconda37-x64"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "64"
      CONDA_PY: "38"

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # This upates conda and installs the necessary packages.
  - "CALL %PYTHON%\\Scripts\\activate.bat base"
  - "%PYTHON%\\Scripts\\conda.exe clean --yes --all"
  - "%PYTHON%\\Scripts\\conda.exe update --yes conda"
  - "%PYTHON%\\Scripts\\conda.exe update --yes --all"
  - "%PYTHON%\\Scripts\\conda.exe config --prepend channels conda-forge"
  - "%PYTHON%\\Scripts\\conda.exe install --yes python=%PYTHON_VERSION% cyipopt>=1.1.0 sympy numpy scipy cython pytest"
  - "%PYTHON%\\Scripts\\conda.exe update -y --all"
  - "%PYTHON%\\Scripts\\conda.exe info"
  - "%PYTHON%\\Scripts\\conda.exe list"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart the
  # parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\Library\\bin;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

build: false

test_script:
  # Run test suite
  - "py.test opty/"

  # Test package install
  - "python setup.py install"
  - 'python -c "import opty"'
  - "%PYTHON%\\Scripts\\conda.exe install --yes matplotlib"
  - "python examples/vyasarayani2011.py"
